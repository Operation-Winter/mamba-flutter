default_platform(:android)

MAMBA_JSON_KEY_DATA = ENV["MAMBA_JSON_KEY_DATA"]
ANDROID_STORE_FILE = ENV["ANDROID_STORE_FILE"]
ANDROID_STORE_PASSWORD = ENV["ANDROID_STORE_PASSWORD"]
ANDROID_KEY_ALIAS = ENV["ANDROID_KEY_ALIAS"]
ANDROID_KEY_PASSWORD = ENV["ANDROID_KEY_PASSWORD"]

platform :android do
  desc "Deploy a new version to the Google Play"
  lane :deploy_to_google_play do
    buildReleaseApp()
    uploadAppToGooglePlay(MAMBA_JSON_KEY_DATA)
  end

  desc "Build App .aab Bundle"
  def buildReleaseApp()
    prepareFlutter() 

    gradle(
      task: "assemble",
      build_type: "Release",
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => ANDROID_STORE_FILE,
        "android.injected.signing.store.password" => ANDROID_STORE_PASSWORD,
        "android.injected.signing.key.alias" => ANDROID_KEY_ALIAS,
        "android.injected.signing.key.password" => ANDROID_KEY_PASSWORD,
      }
    )
  end

  desc "Upload App .aab to PlayStore"
  def uploadAppToGooglePlay(json_key_data) 
    supply(
      track: "internal",
      aab: "../build/app/outputs/bundle/release/app-release.aab",
      json_key_data: json_key_data,
      skip_upload_apk: true,
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
    )
  end

  desc "Prepare Flutter environment"
  def prepareFlutter() 
    sh("flutter --version")
    sh("flutter pub get")
  end
end
